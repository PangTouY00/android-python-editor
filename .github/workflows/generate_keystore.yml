name: Generate Keystore

on:
  workflow_dispatch:  # 允许手动触发

jobs:
  generate-keystore:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Generate Keystore
      run: |
        # 设置变量
        STORE_PASSWORD="android"
        KEY_PASSWORD="android"
        KEY_ALIAS="release_key"
        KEYSTORE_PATH="release-key.jks"
        
        # 生成keystore
        keytool -genkey -v \
          -keystore $KEYSTORE_PATH \
          -keyalg RSA \
          -keysize 2048 \
          -validity 10000 \
          -alias $KEY_ALIAS \
          -storepass $STORE_PASSWORD \
          -keypass $KEY_PASSWORD \
          -dname "CN=YourName, OU=YourOrganizationUnit, O=YourOrganization, L=YourCity, ST=YourState, C=CN"
        
        # 将keystore转换为base64
        SIGNING_KEY=$(base64 -w 0 $KEYSTORE_PATH)
        
        # 创建或更新GitHub Secrets
        echo "SIGNING_KEY=$SIGNING_KEY" >> $GITHUB_ENV
        echo "KEY_ALIAS=$KEY_ALIAS" >> $GITHUB_ENV
        echo "KEY_STORE_PASSWORD=$STORE_PASSWORD" >> $GITHUB_ENV
        echo "KEY_PASSWORD=$KEY_PASSWORD" >> $GITHUB_ENV
        
        # 保存base64到文件
        echo "$SIGNING_KEY" > signing_key.txt
    
    - name: Upload Signing Key
      uses: actions/upload-artifact@v3
      with:
        name: signing-key
        path: signing_key.txt
    
    - name: Create Secret Gist
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # 创建包含所有密钥信息的文件
        cat > keystore_info.txt << EOF
        SIGNING_KEY=${{ env.SIGNING_KEY }}
        KEY_ALIAS=${{ env.KEY_ALIAS }}
        KEY_STORE_PASSWORD=${{ env.KEY_STORE_PASSWORD }}
        KEY_PASSWORD=${{ env.KEY_PASSWORD }}
        EOF
        
        # 使用GitHub CLI创建私密gist
        gh gist create keystore_info.txt --desc "Android Keystore Information" --public=false
    
    - name: Update Repository Secrets
      uses: gliech/create-github-secret-action@v1
      with:
        name: SIGNING_KEY
        value: ${{ env.SIGNING_KEY }}
        pa_token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Update Other Secrets
      uses: gliech/create-github-secret-action@v1
      with:
        name: KEY_ALIAS
        value: ${{ env.KEY_ALIAS }}
        pa_token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Update Store Password
      uses: gliech/create-github-secret-action@v1
      with:
        name: KEY_STORE_PASSWORD
        value: ${{ env.KEY_STORE_PASSWORD }}
        pa_token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Update Key Password
      uses: gliech/create-github-secret-action@v1
      with:
        name: KEY_PASSWORD
        value: ${{ env.KEY_PASSWORD }}
        pa_token: ${{ secrets.GITHUB_TOKEN }} 