name: Android CI

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Setup Gradle
      run: |
        mkdir -p gradle/wrapper
        curl -L -o gradle/wrapper/gradle-wrapper.jar https://github.com/gradle/gradle/raw/master/gradle/wrapper/gradle-wrapper.jar
        curl -L -o gradlew https://raw.githubusercontent.com/gradle/gradle/master/gradlew
        chmod +x gradlew

    - name: Setup Gradle Build Files
      run: |
        # 创建 settings.gradle
        echo 'rootProject.name = "android-python-editor"' > settings.gradle
        echo 'include ":app"' >> settings.gradle
        
        # 创建根目录 build.gradle
        cat > build.gradle << 'EOF'
        buildscript {
            repositories {
                google()
                mavenCentral()
                maven { url "https://chaquo.com/maven" }
                maven { url "https://jitpack.io" }
                maven { url "https://maven.google.com" }
            }
            dependencies {
                classpath 'com.android.tools.build:gradle:8.1.0'
                classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.0'
                classpath 'com.chaquo.python:gradle:14.0.2'
            }
        }
        
        allprojects {
            repositories {
                google()
                mavenCentral()
                maven { url "https://chaquo.com/maven" }
                maven { url "https://jitpack.io" }
                maven { url "https://maven.google.com" }
            }
        }
        
        task clean(type: Delete) {
            delete rootProject.buildDir
        }
        EOF

        # 创建 gradle.properties
        cat > gradle.properties << 'EOF'
        android.useAndroidX=true
        android.enableJetifier=true
        kotlin.code.style=official
        android.nonTransitiveRClass=true
        android.suppressUnsupportedCompileSdk=34
        EOF

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Accept Android SDK Licenses
      run: |
        yes | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --licenses || true

    - name: Build Debug APK
      run: ./gradlew assembleDebug --stacktrace

    - name: Build Release APK
      run: ./gradlew assembleRelease --stacktrace

    - name: Sign Release APK
      uses: r0adkll/sign-android-release@v1
      id: sign_app
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.KEY_ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}

    - name: Upload Debug APK
      uses: actions/upload-artifact@v3
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/app-debug.apk

    - name: Upload Release APK
      uses: actions/upload-artifact@v3
      with:
        name: app-release
        path: ${{steps.sign_app.outputs.signedReleaseFile}}

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          app/build/outputs/apk/debug/app-debug.apk
          ${{steps.sign_app.outputs.signedReleaseFile}}

    - name: Update version.json
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        VERSION_NAME=${GITHUB_REF#refs/tags/v}
        VERSION_CODE=$((${{ github.run_number }} + 1))
        cat > version.json << EOF
        {
            "versionCode": $VERSION_CODE,
            "versionName": "$VERSION_NAME",
            "updateMessage": "新版本发布",
            "downloadUrl": "https://github.com/${{ github.repository }}/releases/download/v${VERSION_NAME}/app-release.apk",
            "forceUpdate": false
        }
        EOF
        
    - name: Commit version.json
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add version.json
        git commit -m "Update version.json for ${{ github.ref }}"
        git push
